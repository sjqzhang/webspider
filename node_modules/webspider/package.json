{
  "name": "webspider",
  "version": "0.0.4",
  "description": "可配置的网络爬虫",
  "main": "spider.js",
  "dependencies": {
    "jquery": "1.8.3",
    "request": "~2.33.0",
    "iconv-lite": "~0.2.11"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/qianshu/webspider"
  },
  "author": {
    "name": "qianshu"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/qianshu/webspider/issues"
  },
  "preferGlobal": "true",
  "bin": {
    "webspider": "index.js"
  },
  "readme": "#### 可配置的网络爬虫\n\n\t可以通过配置 spider.json 来获取json或者html对象。 version (0.0.2) 测试版\n\t\n\n#####安装方式\n\n\t通过 npm install webspider 进行安装。\n\t\n\t\n##### 使用简介\n\n\n方式一、\t\n\n\n\t\twebspider  ~/User/../../spider.json\n\t\n\n方式二、\t \n\n<pre>\n\t\n\tvar spider = require('webspider');\n\tspider([{\n\t\t\"description\": \"百度图片\",\n\t\t\"content\": {\n\t\t\t\"nid\": \".data[0..n].abs\"\n\t\t},\n\t\t\"targetUrls\": [\n\t\t\t\"http://image.baidu.com/channel/listjson?fr=channel&tag1=%E7%BE%8E%E5%A5%B3&tag2=%E5%85%A8%E9%83%A8&sorttype=0\"\n\t\t],\n\t\t\"page\": {\n\t\t\t\"pageKey\": \"pn\",\n\t\t\t\"countKey\": \"rn\",\n\t\t\t\"count\": 10,\n\t\t\t\"start\": 0,\n\t\t\t\"end\": 10,\n\t\t\t\"type\": \"startIndex\"\n\t\t},\n\t\t\"pageType\": \"json\"\n\t}]).on('data',function(data, config){\n\t\t\n\t}).on('end',function(err){\n\t\n\t}).excute();\n\t\t\t\n</pre>\t\n##### spider.json配置\n方式一使用配置\n<pre>\n\t{\n\t\t\"items\": [{\n\t\t\t\"description\": \"百度图片\",\n\t\t\t\"content\": {\n\t\t\t\t\"nid\": \".data[0..n].abs\"\n\t\t\t},\n\t\t\t\"targetUrls\": [\n\t\t\t\t\"http://image.baidu.com/channel/listjson?fr=channel&tag1=%E7%BE%8E%E5%A5%B3&tag2=%E5%85%A8%E9%83%A8&sorttype=0\"\n\t\t\t],\n\t\t\t\"page\": {\n\t\t\t\t\"pageKey\": \"pn\",\n\t\t\t\t\"countKey\": \"rn\",\n\t\t\t\t\"count\": 10,\n\t\t\t\t\"start\": 0,\n\t\t\t\t\"end\": 10,\n\t\t\t\t\"type\": \"startIndex\"\n\t\t\t},\n\t\t\tpostUrl:'http://127.0.0.1/form/'\n\t\t\t\"pageType\": \"json\"\n\t\t}, {\n\t\t\t\"description\": \"网易\",\n\t\t\t\"content\": {\n\t\t\t\t\"nid\": \".hx\"\n\t\t\t},\n\t\t\t\"targetUrls\": [\n\t\t\t\t\"http://www.163.com/index.html\"\n\t\t\t],\n\t\t\t\"pageType\": \"html\",\n\t\t\t\"charset\": \"GBK\"\n\t\t}],\n\t\tinterval:600000\n\t}\n</pre>\n\n1. items [Array] 被爬网站的参数\n\t\n\t1.1  description [String] 被爬网站的简单描述\n\t\n\t1.2  content [JSON] 需要爬的内容的描述，如果是所爬的网页内容是json，则可配置成 '.data[0..n].abs';如果是html则可配置成 selector|method|attrname,例如： 获取选择器.hx对象的text可配置成:.hx|text,或许input的值可配置为 input|val,获取div的data-xx属性可配置为 div|attr|data-xxx\n\t\n\t1.3  targetUrls [Array] 被爬网站的url地址\n\t\n\t1.4  page [JSON] 上图配置可以理解成分页参数为 pn=(countKey*当前页数)&rn=10,如果不设置type，则理解为 pn=当前页数&rn=10\n\t\n\t1.5  postUrl [String] 每当一个content的内容被爬下来的时候就将content的内容提交给postUrl，不设置则在控制台显示。\n\t\n\t1.6  pageType [String] 设置被爬页面的type类型（html|json）,默认为html\n\t\n\t1.7  charset [String] 被爬网站的编码方式，默认为UTF-8\n\t\n\t\t\n2. interval [Number] 每隔多少ms执行一次，不填则执行一次\n\t\n\t\n\t\t",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/qianshu/webspider",
  "_id": "webspider@0.0.4",
  "dist": {
    "shasum": "73a2b9b729348432a0884ef7666a89abe9bb88d5"
  },
  "_from": "webspider@",
  "_resolved": "https://registry.npmjs.org/webspider/-/webspider-0.0.4.tgz"
}
